trigger:
- main

pool:
  name: Azure Pipelines
  demands:
  - msbuild
  - visualstudio
  - vstest
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  ArtifactName: 'StringLibrary'  # Adjust this if needed based on your class library's name

steps:
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 6.4'
  inputs:
    versionSpec: '6.4'

- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)\\"'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: NuGetCommand@2
  displayName: 'NuGet Pack'
  inputs:
    command: pack
    packagesToPack: '$(Build.ArtifactStagingDirectory)\StringLibrary\StringLibrary.csproj'  # Specify your .csproj file location
    versioningScheme: 'off'
    outputDir: '$(Build.ArtifactStagingDirectory)'

- task: NuGetCommand@2
  displayName: 'NuGet Push'
  inputs:
    command: push
    publishVstsFeed: 'Lab4-feed'  # Update this to your feed name if you're using the feed name directly

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(ArtifactName)'
  condition: succeededOrFailed()
